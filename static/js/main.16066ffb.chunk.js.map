{"version":3,"sources":["Components/Deportes/ListDeportes.js","Components/Atletas/CreatAtleta.js","Components/Atletas/ListAtletas.js","Components/Entrenadores/ListEntrenadores.js","Components/Macrociclos/CreateMacrociclos.js","Components/Plan/PlanDashboard.js","Components/Commons/BarraNav.js","App.js","serviceWorker.js","index.js"],"names":["ListDeportes","Component","CreatAtleta","className","id","type","date-format","onChange","event","fechaNac","target","value","alert","ListAtletas","ListEntrenadores","CreateMacrociclos","PlanDashboard","to","path","BarraNav","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+WAEqBA,E,uKAEb,OACI,6BACI,qD,GAJ0BC,a,MCC3B,SAASC,IAUtB,OACE,yBAAKC,UAAU,iBACb,0BAAMC,GAAG,eAAeD,UAAU,cAChC,0CACA,2BAAOE,KAAK,OAAOD,GAAG,cACtB,4CACA,2BAAOC,KAAK,OAAOD,GAAG,YACtB,6BACA,+CACA,2BACEA,GAAG,WACHC,KAAK,OACLC,cAAY,aACZC,SArBN,SAAsBC,GAElB,IAAIC,EAASD,EAAME,OAAOC,MACZ,KAAXF,GAA2B,MAAVA,GAChBG,MAAMH,MAmBV,uCACA,2BAAON,UAAU,aAAaE,KAAK,WACnC,6BACA,wCACA,4BAAQD,GAAG,SACT,4BAAQO,MAAM,gBAAd,gBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,aAEF,4CACA,4BAAQP,GAAG,aACT,4BAAQO,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,Y,ICvCWE,E,uKAEjB,OACE,kBAAC,WAAD,KACE,6BACE,iDACA,4BACI,0CAGN,6BACE,kBAACX,EAAD,Y,GAX+BD,aCD1B,SAASa,IACpB,OACI,6BACI,uD,MCHG,SAASC,IACpB,OACI,6BACI,2CACA,6BACI,8BACI,yCACA,2BAAOX,GAAG,SAASC,KAAK,SACxB,yCACA,2BAAOD,GAAG,SAASC,KAAK,YCN7B,SAASW,IACtB,OACE,kBAAC,IAAD,KACE,6BAEE,6BACE,wBAAIZ,GAAG,aACL,4BACE,kBAAC,IAAD,CAAMa,GAAG,gBAAT,gBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,eAAT,eAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,gBAAT,mBAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBACV,kBAACH,EAAD,OAEF,kBAAC,IAAD,CAAOG,KAAK,gBACZ,kBAAC,IAAD,CAAOA,KAAK,mBCpBL,SAASC,IACtB,OAEI,kBAAC,IAAD,KACE,6BACE,6BACE,wBAAIf,GAAG,UACL,4BACE,kBAAC,IAAD,CAAMa,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,iBAAT,iBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,YAMR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAACJ,EAAD,OAEF,kBAAC,IAAD,CAAOI,KAAK,WACV,kBAACF,EAAD,SC5BGI,MAZf,WACE,OACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,cAChB,iDAGF,kBAAC,EAAD,QCDckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.16066ffb.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ListDeportes extends Component {\n    render() {\n        return (\n            <div>\n                <p>Lista de Deportes</p>\n            </div>\n        )\n    }\n}\n","import \"./Atleta.css\";\nimport React from \"react\";\n\nexport default function CreatAtleta() { \n    \n    function calcularEdad(event) {\n        //let fechaNac = document.querySelector(\"edad\");\n        let fechaNac=event.target.value;\n        if(fechaNac!=='' && fechaNac!=null){\n            alert(fechaNac);\n        }\n    }\n  \n  return (\n    <div className=\"contentAtleta\">\n      <form id=\"createAtleta\" className=\"formAtleta\">\n        <label>Nombres</label>\n        <input type=\"text\" id=\"apellidos\"></input>\n        <label>Apellidos</label>\n        <input type=\"text\" id=\"nombres\"></input>\n        <hr></hr>\n        <label>Fecha de Nac</label>\n        <input\n          id=\"fechanac\"\n          type=\"date\"\n          date-format=\"yyyy-mm-dd\"\n          onChange={calcularEdad}\n        ></input>\n        <label>Edad</label>\n        <input className=\"edadAtleta\" type=\"number\"></input>\n        <hr></hr>\n        <label>Nivel</label>\n        <select id=\"nivel\">\n          <option value=\"principiante\">Principiante</option>\n          <option value=\"intermedio\">Intermedio</option>\n          <option value=\"avanzado\">Avanzado</option>\n        </select>\n        <label>Categoria</label>\n        <select id=\"categoria\">\n          <option value=\"infantes\">Infantes</option>\n          <option value=\"cadetes\">Cadetes</option>\n          <option value=\"juniors\">Juniors</option>\n          <option value=\"sub23\">Sub23</option>\n        </select>\n      </form>\n    </div>\n  );\n  \n\n}\n","import React, { Component, Fragment } from \"react\";\nimport CreatAtleta from \"./CreatAtleta\";\n\nexport default class ListAtletas extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div>\n          <p>Listado de atletas</p>\n          <ul>\n              <li>Atleta 1</li>\n          </ul>\n        </div>\n        <div>\n          <CreatAtleta></CreatAtleta>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react'\n\nexport default function ListEntrenadores() {\n    return (\n        <div>\n            <p>Listado de Entrenadores</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function CreateMacrociclos() {\n    return (\n        <div>\n            <h1>Nuevo Macro</h1>\n            <div>\n                <form>\n                    <label>Nombre</label>\n                    <input id=\"nombre\" type=\"text\"></input>\n                    <label>Codigo</label>\n                    <input id=\"codigo\" type=\"text\"></input>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport './Plan.css'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport CreateMacrociclos from \"../Macrociclos/CreateMacrociclos\";\n\nexport default function PlanDashboard() {\n  return (\n    <Router>\n      <div>\n          \n        <nav>\n          <ul id=\"dashboard\">\n            <li>\n              <Link to=\"/macrociclos\">Macrociclos</Link>\n            </li>\n            <li>\n              <Link to=\"/mesociclos\">Mesociclos</Link>\n            </li>\n            <li>\n              <Link to=\"/microciclos\">Microciclos</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <Switch>\n        <Route path=\"/macrociclos\">\n          <CreateMacrociclos></CreateMacrociclos>\n        </Route>\n        <Route path=\"/mesociclos\"></Route>\n        <Route path=\"/microciclos\">\n          \n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport './BarraNav.css'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport ListDeportes from \"../Deportes/ListDeportes\";\nimport ListAtletas from \"../Atletas/ListAtletas\";\nimport ListEntrenadores from \"../Entrenadores/ListEntrenadores\";\nimport PlanDashboard from \"../Plan/PlanDashboard\";\n\nexport default function BarraNav() {\n  return (\n  \n      <Router>\n        <div>\n          <nav>\n            <ul id=\"button\">\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/deportes\">Deportes</Link>\n              </li>\n              <li>\n                <Link to=\"/atletas\">Atletas</Link>\n              </li>\n              <li>\n                <Link to=\"/entrenadores\">Entrenadores</Link>\n              </li>\n              <li>\n                <Link to=\"/planes\">Plan</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <Switch>\n          <Route path=\"/deportes\">\n            <ListDeportes></ListDeportes>\n          </Route>\n          <Route path=\"/atletas\">\n            <ListAtletas></ListAtletas>\n          </Route>\n          <Route path=\"/entrenadores\">\n            <ListEntrenadores></ListEntrenadores>\n          </Route>\n          <Route path=\"/planes\">\n            <PlanDashboard></PlanDashboard>\n          </Route>\n        </Switch>\n\n      </Router>\n    \n  );\n}\n","import React from \"react\";\n\nimport \"./styles/App.css\";\n\nimport BarraNav from \"./Components/Commons/BarraNav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>PeriodizationAPP</h1>\n        \n      </header>\n      <BarraNav></BarraNav>      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}